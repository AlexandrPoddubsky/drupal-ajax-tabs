diff --git ajax_tabs.install ajax_tabs.install
index 64cc789..bf77082 100755
--- ajax_tabs.install
+++ ajax_tabs.install
@@ -2,17 +2,25 @@
 // $Id: ajax_tabs.install,v 1.1 2009/08/04 14:00:02 doublethink Exp $
 
 /**
- * Implementaton of hook_install
+ * @file
+ * Contains un/installation hook implementations.
+ */
+
+/**
+ * Implements hook_install().
  */
 function ajax_tabs_install() {
   db_query("UPDATE {system} SET weight = 100 WHERE name = 'ajax_tabs'");
-  drupal_set_message(t("Ajax Tabs is installed successfully."));
+  drupal_set_message(st('<a href="!link">Ajax Tabs</a> is installed successfully.',
+    array('!link' => url('admin/settings/ajax-tabs'))
+  ));
 }
 
 /**
- * Implementaton of hook_uninstall
+ * Implements hook_uninstall().
  */
 function ajax_tabs_uninstall() {
-  db_query("DELETE FROM {variable} WHERE name LIKE 'ajax_tabs_%'");
-  db_query("DELETE FROM {system} WHERE name = 'ajax_tabs'");
+  variable_del('ajax_tabs_pages');
+  variable_del('ajax_tabs_selector');
+  variable_del('ajax_tabs_visibility');
 }
diff --git ajax_tabs.js ajax_tabs.js
index 1ca36f7..ae2425f 100755
--- ajax_tabs.js
+++ ajax_tabs.js
@@ -1,34 +1,37 @@
 // $Id: ajax_tabs.js,v 1.1 2009/08/04 14:00:02 doublethink Exp $
 
 Drupal.AjaxTabs = Drupal.AjaxTabs || {};
-Drupal.behaviors.AjaxTabs = function (context) {
-	$('#tabs-wrapper a').click(function() {
-		var target = $('#AjaxTabs-wrapper');
-		if (!$(this).hasClass('active')) {
-			$.ajax({
-				type: 'POST',
-				data: 'AjaxTabs=1',
-				dataType: 'json',
-				url: $(this).attr('href'),
-				success: function(response){
-					if (response.__callbacks) {
-						$.each(response.__callbacks, function(i, callback) {
-							eval(callback)(target, response);
-						});
-					}
-					document.title = response.head_title;
-				}
-			});
-			$('#tabs-wrapper li').removeClass('active');
-			$('#tabs-wrapper a').removeClass('active');
-			$(this).addClass('active');
-			$(this).parents('#tabs-wrapper li').addClass('active');
-		}
-		return false;
-	});
+Drupal.behaviors.AjaxTabs = function(context) {
+  $(Drupal.settings.ajaxTabs.selector).find('a').click(function() {
+    var target = $('#AjaxTabs-wrapper');
+
+    if (!$(this).hasClass('active')) {
+      $.ajax({
+        type: 'POST',
+        data: 'AjaxTabs=1',
+        dataType: 'json',
+        url: $(this).attr('href'),
+        success: function(response) {
+          if (response.__callbacks) {
+            $.each(response.__callbacks, function(i, callback) {
+              eval(callback)(target, response);
+            });
+          }
+          document.title = response.head_title;
+        }
+      });
+
+      $(Drupal.settings.ajaxTabs.selector).find('li').removeClass('active');
+      $(Drupal.settings.ajaxTabs.selector).find('a').removeClass('active');
+      $(this).addClass('active');
+      $(this).parents(Drupal.settings.ajaxTabs.selector + ' li').addClass('active');
+    }
+
+    return false;
+  });
 }
-	
-Drupal.AjaxTabs.contentCallback = function (target, response) {
-	target = $(target).hide().html(response.content).fadeIn();
-	Drupal.attachBehaviors(target);
+
+Drupal.AjaxTabs.contentCallback = function(target, response) {
+  target = $(target).hide().html(response.content).fadeIn();
+  Drupal.attachBehaviors(target);
 }
diff --git ajax_tabs.module ajax_tabs.module
index 3e4559d..5ade3dd 100755
--- ajax_tabs.module
+++ ajax_tabs.module
@@ -1,96 +1,172 @@
 <?php
 // $Id: ajax_tabs.module,v 1.1 2009/08/04 14:00:02 doublethink Exp $
 
-function ajax_tabs_add_files() {
-	drupal_add_js(drupal_get_path('module', 'ajax_tabs') . '/ajax_tabs.js');
+/**
+ * @file
+ * Contains hook implemetations and module helper fucntions.
+ */
+
+/**
+ * Helper function to include necessary JS stuffs.
+ *
+ * @param $type
+ *   Type of JS stuff to add.
+ */
+function ajax_tabs_add_js($type = 'includes') {
+  switch ($type) {
+    case 'includes':
+      drupal_add_js(drupal_get_path('module', 'ajax_tabs') . '/ajax_tabs.js');
+      return;
+
+    case 'settings':
+      drupal_add_js(array(
+      'ajaxTabs' => array(
+        'selector' => variable_get('ajax_tabs_selector', '#tabs-wrapper'),
+      ),
+      ), 'setting');
+      return;
+  }
 }
 
+/**
+ * Implements hook_menu().
+ */
 function ajax_tabs_menu() {
   $items = array();
-	
+
   $items['admin/settings/ajax-tabs'] = array(
-    'title' => t('Ajax Tabs settings'),
-    'description' => t('AJAXifies Drupal menu local tasks'),
+    'title' => 'Ajax Tabs settings',
+    'description' => 'Ajaxifies menu local tasks',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('ajax_tabs_admin'),
     'access callback' => 'user_access',
     'access arguments' => array('administer site configuration'),
   );
-  
+
   return $items;
 }
 
+/**
+ * Form callback for administration settings.
+ *
+ * @ingroup forms
+ * @see system_settings_form()
+ */
 function ajax_tabs_admin() {
-	$form['vis_settings'] = array(
-		'#type' => 'fieldset',
-		'#title' => t('Ajax Tabs'),
-		'#weight' => 0,
-		'#collapsible' => TRUE,
-		'#collapsed' => TRUE,
-	);
-	
-	$options = array(t('Activate on every page except the listed pages.'), t('Activate on only the listed pages.'));
-    $description = t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>'));
-
-    $form['vis_settings']['ajax_tabs_visibility'] = array(
-      '#type' => 'radios',
-      '#title' => t('Activate on specific pages'),
-      '#options' => $options,
-      '#default_value' => variable_get('ajax_tabs_visibility', 0),
-    );
-    $form['vis_settings']['ajax_tabs_pages'] = array(
-      '#type' => 'textarea',
-      '#title' => t('Pages'),
-      '#default_value' => variable_get('ajax_tabs_pages', ''),
-      '#description' => $description,
-    );
-	
-	return system_settings_form($form);
-}
+  $form = array();
+  $options = array(
+    t('Activate on every page except the listed pages.'),
+    t('Activate on only the listed pages.'),
+  );
+  $description = t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.",
+    array(
+      '%blog' => 'blog',
+      '%blog-wildcard' => 'blog/*',
+      '%front' => '<front>',
+    )
+  );
+
+  $form['vis_settings'] = array(
+    '#type' => 'fieldset',
+    '#title' => t('Visibility Settings'),
+    '#weight' => 0,
+    '#collapsible' => TRUE,
+  );
+
+  $form['vis_settings']['ajax_tabs_visibility'] = array(
+    '#type' => 'radios',
+    '#title' => t('Activate on specific pages'),
+    '#options' => $options,
+    '#default_value' => variable_get('ajax_tabs_visibility', 0),
+  );
 
+  $form['vis_settings']['ajax_tabs_pages'] = array(
+    '#type' => 'textarea',
+    '#title' => t('Pages'),
+    '#description' => $description,
+    '#default_value' => variable_get('ajax_tabs_pages', ''),
+  );
+
+  $form['ajax_tabs_selector'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Tabs wrapper jQuery selector'),
+    '#default_value' => variable_get('ajax_tabs_selector', '#tabs-wrapper'),
+    '#required' => TRUE,
+  );
 
+  return system_settings_form($form);
+}
+
+/**
+ * Helper function to decide whether to use Ajax Tabs or not.
+ *
+ * @param $visibility
+ *   Visibility type.
+ * @param $pages
+ *   A list of pages on which the $visibility type should be applied.
+ *
+ * @return
+ *   Boolean value.
+ */
 function ajax_tabs_process_visibility($visibility, $pages) {
-	if ($pages) {
-		$path = drupal_get_path_alias($_GET['q']);
-		$page_match = drupal_match_path($path, $pages);
-		if ($path != $_GET['q']) {
-			$page_match = $page_match || drupal_match_path($_GET['q'],$pages);
-		}
-		$page_match = !($visibility xor $page_match);
-	}
-	else { $page_match = TRUE; }	
-	return $page_match;
+  if ($pages) {
+    $path = drupal_get_path_alias($_GET['q']);
+    $page_match = drupal_match_path($path, $pages);
+
+    if ($path != $_GET['q']) {
+      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
+    }
+    $page_match = !($visibility xor $page_match);
+  }
+  else {
+    $page_match = TRUE;
+  }
+
+  return $page_match;
 }
 
-/*
-Implementation of hook_theme_registry_alter
-*/
+/**
+ * Implements hook_theme_registry_alter().
+ */
 function ajax_tabs_theme_registry_alter(&$theme_registry) {
-	$theme_registry['page']['preprocess functions'][] = 'ajax_tabs_preprocess_page';
+  $theme_registry['page']['preprocess functions'][] = 'ajax_tabs_preprocess_page';
 }
 
-function ajax_tabs_preprocess_page(&$vars){
-	$vis = variable_get('ajax_tabs_visibility', 0);
-	$pages = variable_get('ajax_tabs_pages', '');
-	$active = ajax_tabs_process_visibility($vis, $pages);
-	if($active) {
-		$element_id = 'AjaxTabs-wrapper';
-		$content = $vars['content'];
-		preg_match('/\<div\ id\=\"AjaxTabs\-wrapper\"\>/', $vars['content']) ? null : $vars['content'] = "<div id=\"$element_id\">\n" . $content .  "\n</div>";
-		ajax_tabs_add_files();
-		$vars['scripts'] = drupal_get_js();
-		if (isset($_REQUEST['AjaxTabs']) && $_REQUEST['AjaxTabs']) {
-			ajax_tabs_callback($vars);
-		}
-	}
+/**
+ * Implements module_preprocess_hook().
+ */
+function ajax_tabs_preprocess_page(&$vars) {
+  $vis = variable_get('ajax_tabs_visibility', 0);
+  $pages = variable_get('ajax_tabs_pages', '');
+  $active = ajax_tabs_process_visibility($vis, $pages);
+
+  if ($active) {
+    $element_id = 'AjaxTabs-wrapper';
+    $content = $vars['content'];
+    preg_match('/\<div\ id\=\"AjaxTabs\-wrapper\"\>/', $vars['content']) ? NULL : $vars['content'] = "<div id=\"$element_id\">\n" . $content .  "\n</div>";
+    ajax_tabs_add_js('includes');
+    $vars['scripts'] = drupal_get_js();
+    ajax_tabs_add_js('settings');
+    if (isset($_REQUEST['AjaxTabs']) && $_REQUEST['AjaxTabs']) {
+      ajax_tabs_callback($vars);
+    }
+  }
 }
 
+/**
+ * Ajax Tabs callback.
+ *
+ * @param $page_variables
+ *   An array of page variables.
+ */
 function ajax_tabs_callback($page_variables) {
-	$result = array(
-		'content' => $page_variables['content'],
-		'head_title' => $page_variables['head_title'],
-		'__callbacks' => array('Drupal.AjaxTabs.contentCallback'),
-	);
-	drupal_alter('ajax_data', $result, 'ajax_tabs_ajax');
-	exit(drupal_json($result));
+  $result = array(
+    'content' => $page_variables['content'],
+    'head_title' => $page_variables['head_title'],
+    '__callbacks' => array('Drupal.AjaxTabs.contentCallback'),
+  );
+
+  drupal_alter('ajax_data', $result, 'ajax_tabs_ajax');
+  exit(drupal_json($result));
 }
+
