<?php
// $Id$

/**
 * @file
 * Contains hook implemetations and module helper fucntions.
 *
 * @todo
 * Add preloader as discussed in #540610.
 */

/**
 * Implements hook_menu().
 */
function ajax_tabs_menu() {
  $items = array();

  $items['admin/settings/ajax-tabs'] = array(
    'title' => 'Ajax Tabs settings',
    'description' => 'Ajaxifies menu local tasks.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ajax_tabs_admin'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}

/**
 * Form callback for administration settings.
 *
 * @ingroup forms
 * @see system_settings_form()
 */
function ajax_tabs_admin() {
  $form = array();

  $form['visibility_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Visibility Settings'),
    '#weight' => 0,
    '#collapsible' => TRUE,
  );

  $form['visibility_settings']['ajax_tabs_visibility'] = array(
    '#type' => 'radios',
    '#title' => t('Activate on specific pages'),
    '#default_value' => variable_get('ajax_tabs_visibility', 0),
    '#options' => array(
      t('Activate on every page except the listed pages.'),
      t('Activate on only the listed pages.'),
    ),
  );

  $form['visibility_settings']['ajax_tabs_pages'] = array(
    '#type' => 'textarea',
    '#title' => t('Pages'),
    '#default_value' => variable_get('ajax_tabs_pages', ''),
    '#description' => $description = t("Enter one page per line as Drupal paths. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.",
      array(
        '%blog' => 'blog',
        '%blog-wildcard' => 'blog/*',
        '%front' => '<front>',
      )
    ),
  );

  $form['ajax_tabs_selector'] = array(
    '#type' => 'textfield',
    '#title' => t('Tabs wrapper jQuery selector'),
    '#default_value' => variable_get('ajax_tabs_selector', '#tabs-wrapper'),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Helper function to decide whether to use Ajax Tabs or not.
 *
 * @param $visibility
 *   Visibility type.
 * @param $pages
 *   A list of pages on which the $visibility type should be applied.
 *
 * @return
 *   Boolean value.
 */
function ajax_tabs_process_visibility($visibility, $pages) {
  if ($pages) {
    $path = drupal_get_path_alias($_GET['q']);
    $page_match = drupal_match_path($path, $pages);

    if ($path != $_GET['q']) {
      $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
    }
    $page_match = !($visibility xor $page_match);
  }
  else {
    $page_match = TRUE;
  }

  return $page_match;
}

/**
 * Implements hook_theme_registry_alter().
 */
function ajax_tabs_theme_registry_alter(&$theme_registry) {
  $theme_registry['page']['preprocess functions'][] = 'ajax_tabs_preprocess_page';
}

/**
 * Implements module_preprocess_hook().
 */
function ajax_tabs_preprocess_page(&$vars) {
  $visibility = variable_get('ajax_tabs_visibility', 0);
  $pages = variable_get('ajax_tabs_pages', '');
  $active = ajax_tabs_process_visibility($visibility, $pages);

  if ($active) {
    $element_id = 'AjaxTabs-wrapper';
    $content = $vars['content'];
    preg_match('/\<div\ id\=\"AjaxTabs\-wrapper\"\>/', $vars['content']) ? NULL : $vars['content'] = "<div id=\"$element_id\">\n" . $content .  "\n</div>";
    _ajax_tabs_add_js('includes');
    $vars['scripts'] = drupal_get_js();
    _ajax_tabs_add_js('settings');
    if (isset($_REQUEST['AjaxTabs']) && $_REQUEST['AjaxTabs']) {
      ajax_tabs_callback($vars);
    }
  }
}

/**
 * Ajax Tabs callback.
 *
 * @param $page_variables
 *   An array of page variables.
 *
 * @see ajax_load.module
 */
function ajax_tabs_callback($page_variables) {
  $result = array(
    'content' => $page_variables['content'],
    'head_title' => $page_variables['head_title'],
    '__callbacks' => array('Drupal.AjaxTabs.contentCallback'),
  );

  drupal_alter('ajax_data', $result, 'ajax_tabs_ajax');
  exit(drupal_json($result));
}

/**
 * Helper function to include necessary JS stuffs.
 *
 * @param $type
 *   Type of JS stuff to add.
 *   - includes: Adds required JS file.
 *   - settings: Injects settings into JS.
 */
function _ajax_tabs_add_js($type = 'includes') {
  switch ($type) {
    case 'includes':
      drupal_add_js(drupal_get_path('module', 'ajax_tabs') . '/ajax_tabs.js');
      return;

    case 'settings':
      drupal_add_js(array(
        'ajaxTabs' => array(
          'selector' => variable_get('ajax_tabs_selector', '#tabs-wrapper'),
        ),
      ), 'setting');
      return;
  }
}

